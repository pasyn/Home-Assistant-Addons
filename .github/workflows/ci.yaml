name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

env:
  ADDON_PATH: SDRMR
  ADDON_IMAGE_NAME: sdrmr

jobs:
  lint:
    name: Lint add-on metadata
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Validate add-on configuration
        uses: frenck/action-addon-linter@v2
        with:
          path: "./SDRMR"

  shellcheck:
    name: Shell lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck
      - name: Run ShellCheck
        run: shellcheck ${ADDON_PATH}/run.sh

  build:
    name: Build ${{ matrix.arch }} add-on
    needs:
      - lint
      - shellcheck
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["aarch64", "amd64", "armv7", "i386"]
      fail-fast: false
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.arch }}-
            ${{ runner.os }}-buildx-

      - name: Build add-on
        uses: home-assistant/actions/addon-builder@v1
        with:
          addon: ${{ env.ADDON_PATH }}
          arch: ${{ matrix.arch }}

      - name: Persist Docker layer cache
        if: always()
        run: |
          if [ -d /tmp/.buildx-cache-new ]; then
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          fi

  publish:
    name: Publish multi-arch image
    needs:
      - build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.ADDON_PATH }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/386
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.ADDON_IMAGE_NAME }}:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/${{ env.ADDON_IMAGE_NAME }}:latest
          cache-from: type=gha,scope=${{ env.ADDON_IMAGE_NAME }}
          cache-to: type=gha,mode=max,scope=${{ env.ADDON_IMAGE_NAME }}
          push: true
